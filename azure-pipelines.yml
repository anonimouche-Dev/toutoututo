# Pipeline for .NET MAUI Blazor project targeting Android

trigger:
- main

pool:
  vmImage: 'macos-latest'  # macOS is required for .NET MAUI builds targeting Android and iOS

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.x'  # Use the appropriate .NET version for your project
  displayName: 'Install .NET SDK'

- task: UseDotNet@2
  inputs:
    packageType: 'runtime'
    version: '7.x'  # Use the appropriate .NET runtime for your project
  displayName: 'Install .NET Runtime'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '$(APPLE_CERTIFICATE_SECUREFILE)'
    certPwd: '$(APPLE_CERTIFICATE_PASSWORD)'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  displayName: 'Install Apple Certificate'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: '$(APPLE_PROV_PROFILE_SECUREFILE)'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  displayName: 'Install Apple Provisioning Profile'

- script: dotnet restore
  displayName: 'Restore NuGet Packages'

- script: |
    dotnet build -c Release -t:Run -f net7.0-android
  displayName: 'Build .NET MAUI Blazor App for Android'

- script: |
    dotnet publish -c Release -f net7.0-android --output $(Build.ArtifactStagingDirectory)/apk
  displayName: 'Publish APK'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/apk'
    ArtifactName: 'drop'
  displayName: 'Publish APK as Build Artifact'

# You can add additional steps if you need to sign the APK, run UI tests, or deploy the APK.
